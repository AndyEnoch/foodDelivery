{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nyarko Betrand\\\\Desktop\\\\work\\\\foodDelivery\\\\foodApp\\\\components\\\\Shared\\\\Button.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport BoldText, { RegularText } from \"./StyledText\";\nimport IonIcons from \"@expo/vector-icons/Ionicons\";\nimport Row from \"./Row\";\nimport Iconly from \"./Iconly\";\nimport COLORS from \"../../assets/colors/colors\";\nexport default function Button(props) {\n  var animated = new Animated.Value(1);\n\n  var handlePressIn = function handlePressIn() {\n    Animated.spring(animated, {\n      toValue: 0.9,\n      useNativeDriver: true\n    }).start();\n  };\n\n  var handlePressOut = function handlePressOut() {\n    Animated.spring(animated, {\n      toValue: 1,\n      friction: 20,\n      tension: 90,\n      useNativeDriver: true\n    }).start();\n  };\n\n  useEffect(function () {\n    return animated.removeAllListeners();\n  }, []);\n  return React.createElement(TouchableOpacity, _extends({\n    disabled: props.loading,\n    activeOpacity: 0.8\n  }, props, {\n    style: [style.button, _objectSpread(_objectSpread({\n      backgroundColor: props.disabled ? 'grey' : COLORS.green\n    }, props.style), {}, {\n      transform: [{\n        scale: animated\n      }]\n    })],\n    onPressIn: function onPressIn() {\n      handlePressIn();\n    },\n    onPressOut: function onPressOut() {\n      handlePressOut();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), React.createElement(Animated.View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, props.loading ? React.createElement(ActivityIndicator, {\n    color: 'white',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }) : React.createElement(Row, {\n    style: {\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, (props == null ? void 0 : props.icon) && React.createElement(IonIcons, {\n    name: props == null ? void 0 : props.icon,\n    color: (props == null ? void 0 : props.iconColor) || 'white',\n    size: 17,\n    style: {\n      marginRight: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  }), React.createElement(RegularText, {\n    style: {\n      color: (props == null ? void 0 : props.btnColor) || 'white',\n      fontSize: (props == null ? void 0 : props.fontSize) || 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, props.title))));\n}\nexport function FAB(props) {\n  var animated = new Animated.Value(1);\n\n  handlePressIn = function handlePressIn() {\n    Animated.spring(animated, {\n      toValue: 0.9,\n      useNativeDriver: true\n    }).start();\n  };\n\n  handlePressOut = function handlePressOut() {\n    Animated.spring(animated, {\n      toValue: 1,\n      friction: 20,\n      tension: 30,\n      useNativeDriver: true\n    }).start();\n  };\n\n  return React.createElement(TouchableOpacity, _extends({\n    disabled: props.loading,\n    activeOpacity: 0.8,\n    onPressIn: function onPressIn() {\n      handlePressIn();\n    },\n    onPressOut: function onPressOut() {\n      handlePressOut();\n    }\n  }, props, {\n    style: [style.fab, _objectSpread(_objectSpread({\n      backgroundColor: props.disabled ? 'grey' : COLORS.green\n    }, props.style), {}, {\n      transform: [{\n        scale: animated\n      }]\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), props.loading ? React.createElement(ActivityIndicator, {\n    color: 'white',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }) : React.createElement(IonIcons, {\n    size: 22,\n    color: \"white\",\n    name: (props == null ? void 0 : props.icon) || 'arrow-forward',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }));\n}\nexport function IconlyFAB(props) {\n  var _useState = useState(new Animated.Value(1)),\n      _useState2 = _slicedToArray(_useState, 1),\n      animated = _useState2[0];\n\n  var handlePressIn = function handlePressIn() {\n    Animated.spring(animated, {\n      toValue: 0.9,\n      useNativeDriver: true\n    }).start();\n  };\n\n  var handlePressOut = function handlePressOut() {\n    Animated.spring(animated, {\n      toValue: 1,\n      friction: 20,\n      tension: 30,\n      useNativeDriver: true\n    }).start();\n  };\n\n  return React.createElement(TouchableOpacity, _extends({\n    disabled: props.loading,\n    activeOpacity: 0.8,\n    onPressIn: function onPressIn() {\n      handlePressIn();\n    },\n    onPressOut: function onPressOut() {\n      handlePressOut();\n    }\n  }, props, {\n    style: [style.fab, _objectSpread(_objectSpread({\n      backgroundColor: props.disabled ? 'grey' : COLORS.green\n    }, props.style), {}, {\n      transform: [{\n        scale: animated\n      }]\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }), props.loading ? React.createElement(ActivityIndicator, {\n    color: 'white',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }) : React.createElement(Iconly, {\n    size: 18,\n    color: \"white\",\n    name: props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }));\n}\nexport function SecondaryButton(props) {\n  return React.createElement(TouchableOpacity, _extends({\n    activeOpacity: 0.8\n  }, props, {\n    style: [style.secondary, _objectSpread({}, props.style)],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }), props.loading ? React.createElement(ActivityIndicator, {\n    color: COLORS.green,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }) : React.createElement(RegularText, {\n    style: {\n      color: (props == null ? void 0 : props.btnColor) || 'black',\n      fontSize: (props == null ? void 0 : props.fontSize) || 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, props.title));\n}\nvar style = StyleSheet.create({\n  button: {\n    backgroundColor: COLORS.green,\n    padding: 13,\n    marginVertical: 15,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4,\n    paddingVertical: 15\n  },\n  fab: {\n    backgroundColor: COLORS.green,\n    width: 50,\n    height: 50,\n    position: 'absolute',\n    right: 0,\n    bottom: 0,\n    margin: 25,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 25\n  },\n  secondary: {\n    borderWidth: 1,\n    borderColor: COLORS.green,\n    padding: 13,\n    marginVertical: 15,\n    paddingVertical: 15,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4\n  }\n});","map":{"version":3,"sources":["C:/Users/Nyarko Betrand/Desktop/work/foodDelivery/foodApp/components/Shared/Button.js"],"names":["React","useEffect","useState","BoldText","RegularText","IonIcons","Row","Iconly","COLORS","Button","props","animated","Animated","Value","handlePressIn","spring","toValue","useNativeDriver","start","handlePressOut","friction","tension","removeAllListeners","loading","style","button","backgroundColor","disabled","green","transform","scale","alignItems","icon","iconColor","marginRight","color","btnColor","fontSize","title","FAB","fab","IconlyFAB","name","SecondaryButton","secondary","StyleSheet","create","padding","marginVertical","justifyContent","borderRadius","paddingVertical","width","height","position","right","bottom","margin","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n    TouchableOpacity,\r\n    Animated,\r\n    StyleSheet,\r\n    ActivityIndicator,\r\n} from 'react-native'\r\nimport BoldText, { RegularText } from './StyledText';\r\nimport IonIcons from 'react-native-vector-icons/Ionicons';\r\nimport Row from './Row';\r\nimport Iconly from './Iconly';\r\nimport COLORS from '../../assets/colors/colors';\r\n\r\nexport default function Button(props) {\r\n    let animated = new Animated.Value(1);\r\n\r\n    const handlePressIn = () => {\r\n        Animated.spring(animated, {\r\n            toValue: 0.9,\r\n            useNativeDriver: true,\r\n        }).start();\r\n    };\r\n\r\n    const handlePressOut = () => {\r\n        Animated.spring(animated, {\r\n            toValue: 1,\r\n            friction: 20,\r\n            tension: 90,\r\n            useNativeDriver: true,\r\n        }).start();\r\n    };\r\n\r\n    useEffect(() => {\r\n        return animated.removeAllListeners();\r\n    }, []);\r\n\r\n    return (\r\n        <TouchableOpacity\r\n            disabled={props.loading}\r\n            activeOpacity={0.8}\r\n            {...props}\r\n            style={[\r\n                style.button,\r\n\r\n                {\r\n                    backgroundColor: props.disabled ? 'grey' : COLORS.green,\r\n                    ...props.style,\r\n                    transform: [{ scale: animated }],\r\n                },\r\n            ]}\r\n            onPressIn={() => {\r\n                handlePressIn();\r\n            }}\r\n            onPressOut={() => {\r\n                handlePressOut();\r\n            }}>\r\n            <Animated.View>\r\n                {props.loading ? (\r\n                    <ActivityIndicator color={'white'} />\r\n                ) : (\r\n                    <Row style={{ alignItems: 'center' }}>\r\n                        {props?.icon && (\r\n                            <IonIcons\r\n                                name={props?.icon}\r\n                                color={props?.iconColor || 'white'}\r\n                                size={17}\r\n                                style={{ marginRight: 5 }}\r\n                            />\r\n                        )}\r\n                        <RegularText\r\n                            style={{\r\n                                color: props?.btnColor || 'white',\r\n                                fontSize: props?.fontSize || 20,\r\n                            }}>\r\n                            {props.title}\r\n                        </RegularText>\r\n                    </Row>\r\n                )}\r\n            </Animated.View>\r\n        </TouchableOpacity>\r\n    );\r\n}\r\n\r\nexport function FAB(props) {\r\n    let animated = new Animated.Value(1);\r\n\r\n    handlePressIn = () => {\r\n        Animated.spring(animated, {\r\n            toValue: 0.9,\r\n            useNativeDriver: true,\r\n        }).start();\r\n    };\r\n\r\n    handlePressOut = () => {\r\n        Animated.spring(animated, {\r\n            toValue: 1,\r\n            friction: 20,\r\n            tension: 30,\r\n            useNativeDriver: true,\r\n        }).start();\r\n    };\r\n    return (\r\n        <TouchableOpacity\r\n            disabled={props.loading}\r\n            activeOpacity={0.8}\r\n            onPressIn={() => {\r\n                handlePressIn();\r\n            }}\r\n            onPressOut={() => {\r\n                handlePressOut();\r\n            }}\r\n            {...props}\r\n            style={[\r\n                style.fab,\r\n                {\r\n                    backgroundColor: props.disabled ? 'grey' : COLORS.green,\r\n                    ...props.style,\r\n                    transform: [{ scale: animated }],\r\n                },\r\n            ]}>\r\n            {props.loading ? (\r\n                <ActivityIndicator color={'white'} />\r\n            ) : (\r\n                <IonIcons\r\n                    size={22}\r\n                    color=\"white\"\r\n                    name={props?.icon || 'arrow-forward'}\r\n                />\r\n            )}\r\n        </TouchableOpacity>\r\n    );\r\n}\r\n\r\nexport function IconlyFAB(props) {\r\n    const [animated] = useState(new Animated.Value(1));\r\n\r\n    const handlePressIn = () => {\r\n        Animated.spring(animated, {\r\n            toValue: 0.9,\r\n            useNativeDriver: true,\r\n        }).start();\r\n    };\r\n\r\n    const handlePressOut = () => {\r\n        Animated.spring(animated, {\r\n            toValue: 1,\r\n            friction: 20,\r\n            tension: 30,\r\n            useNativeDriver: true,\r\n        }).start();\r\n    };\r\n    return (\r\n        <TouchableOpacity\r\n            disabled={props.loading}\r\n            activeOpacity={0.8}\r\n            onPressIn={() => {\r\n                handlePressIn();\r\n            }}\r\n            onPressOut={() => {\r\n                handlePressOut();\r\n            }}\r\n            {...props}\r\n            style={[\r\n                style.fab,\r\n                {\r\n                    backgroundColor: props.disabled ? 'grey' : COLORS.green,\r\n                    ...props.style,\r\n                    transform: [{ scale: animated }],\r\n                },\r\n            ]}>\r\n            {props.loading ? (\r\n                <ActivityIndicator color={'white'} />\r\n            ) : (\r\n                <Iconly size={18} color=\"white\" name={props.name} />\r\n            )}\r\n        </TouchableOpacity>\r\n    );\r\n}\r\n\r\nexport function SecondaryButton(props) {\r\n    return (\r\n        <TouchableOpacity\r\n            activeOpacity={0.8}\r\n            {...props}\r\n            style={[style.secondary, { ...props.style }]}>\r\n            {props.loading ? (\r\n                <ActivityIndicator color={COLORS.green} />\r\n            ) : (\r\n                <RegularText\r\n                    style={{\r\n                        color: props?.btnColor || 'black',\r\n                        fontSize: props?.fontSize || 15,\r\n                    }}>\r\n                    {props.title}\r\n                </RegularText>\r\n            )}\r\n        </TouchableOpacity>\r\n    );\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n    button: {\r\n        backgroundColor: COLORS.green,\r\n        padding: 13,\r\n        marginVertical: 15,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: 4,\r\n        paddingVertical: 15,\r\n    },\r\n    fab: {\r\n        backgroundColor: COLORS.green,\r\n        width: 50,\r\n        height: 50,\r\n        position: 'absolute',\r\n        right: 0,\r\n        bottom: 0,\r\n        margin: 25,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: 25,\r\n    },\r\n    secondary: {\r\n        borderWidth: 1,\r\n        borderColor: COLORS.green,\r\n        padding: 13,\r\n        marginVertical: 15,\r\n        paddingVertical: 15,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: 4,\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}