{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nyarko Betrand\\\\Desktop\\\\work\\\\foodDelivery\\\\foodApp\\\\screens\\\\ShoppingCartIcon.js\";\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport { CartContext } from \"../context/CartContext\";\nimport COLORS from \"../assets/colors/colors\";\nimport * as Icons from \"react-native-heroicons/solid\";\nimport { RegularText } from \"../components/Shared/StyledText\";\nvar screenHeight = Dimensions.get(\"window\").height;\nexport default function shoppingCartIcon() {\n  var _this = this;\n\n  var _useContext = useContext(CartContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      cart = _useContext2[0],\n      setCart = _useContext2[1];\n\n  var totalPrice = cart.reduce(function (acc, curr) {\n    return acc + curr.price;\n  }, 0);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      change = _useState2[0],\n      setChange = _useState2[1];\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    showsVerticalScrollIndicator: false,\n    data: cart,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.main,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.withinMain,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: styles.imageBoundary,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }\n      }, React.createElement(Image, {\n        style: {\n          flex: 1,\n          resizeMode: 'cover',\n          borderRadius: 10,\n          height: 90,\n          width: 80\n        },\n        imageStyle: {\n          width: 80\n        },\n        source: item.image,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }\n      })), React.createElement(View, {\n        style: styles.textBoundary,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.topText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }\n      }, item.name), React.createElement(Text, {\n        style: styles.midText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }\n      }, item.description, \" \", '\\n', item.description2), React.createElement(Text, {\n        style: styles.downText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 33\n        }\n      }, item.price)), React.createElement(View, {\n        style: {\n          height: 25,\n          width: 90,\n          backgroundColor: COLORS.green,\n          top: 32,\n          right: 40,\n          borderRadius: 5,\n          flexDirection: \"row\",\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }\n      }, React.createElement(RegularText, {\n        style: {\n          color: COLORS.white,\n          alignSelf: 'center',\n          fontSize: 18,\n          marginHorizontal: 15\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }\n      }, item.count), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return item.count--;\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 37\n        }\n      }, React.createElement(Icons.PlusIcon, {\n        style: {\n          color: COLORS.white,\n          paddingTop: 3\n        },\n        size: 18,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 43\n        }\n      }))))));\n    },\n    style: {\n      height: screenHeight / 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  main: {\n    backgroundColor: COLORS.white,\n    width: '90%',\n    borderRadius: 10,\n    height: 100,\n    marginBottom: 12,\n    alignSelf: 'center'\n  },\n  withinMain: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 5\n  },\n  imageBoundary: {\n    height: 90,\n    width: 80,\n    borderRadius: 10,\n    marginRight: 8\n  },\n  textBoundary: {\n    height: 90,\n    paddingRight: 20\n  },\n  topText: {\n    fontWeight: 'bold',\n    fontSize: 18\n  },\n  midText: {\n    color: 'grey',\n    fontSize: 12\n  },\n  downText: {\n    color: COLORS.green,\n    fontWeight: 'bold',\n    fontSize: 16,\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/Nyarko Betrand/Desktop/work/foodDelivery/foodApp/screens/ShoppingCartIcon.js"],"names":["React","useContext","useState","CartContext","COLORS","Icons","RegularText","screenHeight","Dimensions","get","height","shoppingCartIcon","cart","setCart","totalPrice","reduce","acc","curr","price","change","setChange","item","styles","main","withinMain","imageBoundary","flex","resizeMode","borderRadius","width","image","textBoundary","topText","name","midText","description","description2","downText","backgroundColor","green","top","right","flexDirection","justifyContent","alignItems","color","white","alignSelf","fontSize","marginHorizontal","count","paddingTop","StyleSheet","create","marginBottom","margin","marginRight","paddingRight","fontWeight","marginTop"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { View, Text, FlatList, StyleSheet, Image, Dimensions, TouchableOpacity, Touchable } from 'react-native'\r\nimport { CartContext } from '../context/CartContext'\r\nimport COLORS from '../assets/colors/colors';\r\nimport * as Icons from \"react-native-heroicons/solid\";\r\nimport { RegularText } from '../components/Shared/StyledText';\r\n\r\n\r\nconst screenHeight = Dimensions.get(\"window\").height;\r\n\r\n\r\nexport default function shoppingCartIcon() {\r\n\r\n    const [cart, setCart] = useContext(CartContext);\r\n\r\n\r\n    const totalPrice = cart.reduce((acc, curr) => acc + curr.price, 0)\r\n\r\n    // const cartName = this.cart.data.map(function (data, id) {\r\n    //     return key = { id }{ data.name }\r\n\r\n    // }\r\n\r\n    const [change, setChange] = useState([]);\r\n\r\n    // count > 1 ? setCount(count - 1) : 1\r\n\r\n    // setCount(count + 1)\r\n\r\n    // const handleIncrement = (card_id) => {\r\n    //     setChange(change =>\r\n    //         change.map((item) =>\r\n    //             card_id === cart.id ? { ...cart, count: cart.count + 1 } : item\r\n    //         ));\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <View>\r\n\r\n\r\n            <FlatList\r\n                showsVerticalScrollIndicator={false}\r\n                data={cart}\r\n                renderItem={({ item }) =>\r\n\r\n                    <View style={styles.main}>\r\n\r\n                        <View style={styles.withinMain}>\r\n                            <View style={styles.imageBoundary}>\r\n                                <Image style={{\r\n                                    flex: 1,\r\n                                    resizeMode: 'cover',\r\n                                    borderRadius: 10,\r\n                                    height: 90,\r\n                                    width: 80,\r\n                                }}\r\n                                    imageStyle={{\r\n                                        width: 80\r\n                                    }}\r\n                                    source={item.image} />\r\n                            </View>\r\n                            <View style={styles.textBoundary}>\r\n                                <Text style={styles.topText}>{item.name}</Text>\r\n                                <Text style={styles.midText}>{item.description} {'\\n'}{item.description2}</Text>\r\n                                <Text style={styles.downText}>{item.price}</Text>\r\n                            </View>\r\n\r\n                            <View\r\n                                style={{\r\n                                    height: 25,\r\n                                    width: 90,\r\n                                    backgroundColor: COLORS.green,\r\n                                    top: 32, right: 40,\r\n                                    borderRadius: 5,\r\n                                    flexDirection: \"row\",\r\n                                    justifyContent: 'center',\r\n                                    alignItems: 'center'\r\n                                }}\r\n                            >\r\n                                {/* <TouchableOpacity onPress={(card_id) => {\r\n                                    setChange(change =>\r\n                                        change.map((item) =>\r\n                                            card_id === item.id ? { ...item, count: item.count + 1 } : item\r\n                                        ));\r\n                                }}>\r\n                                    <Text ><Icons.MinusIcon style={{ color: COLORS.white, paddingTop: 3 }} size={18} /></Text>\r\n                                </TouchableOpacity> */}\r\n\r\n                                <RegularText\r\n                                    style={{\r\n                                        color: COLORS.white,\r\n                                        alignSelf: 'center',\r\n                                        fontSize: 18,\r\n                                        marginHorizontal: 15\r\n                                    }}\r\n\r\n                                >{item.count}</RegularText>\r\n\r\n                                <TouchableOpacity onPress={() => item.count--}>\r\n                                    <Text><Icons.PlusIcon style={{ color: COLORS.white, paddingTop: 3 }} size={18} /></Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n\r\n                        </View>\r\n\r\n\r\n                    </View>\r\n                }\r\n                style={{ height: screenHeight / 1 }}\r\n            />\r\n        </View >\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    main: {\r\n        backgroundColor: COLORS.white,\r\n        width: '90%',\r\n        borderRadius: 10,\r\n        height: 100,\r\n        marginBottom: 12,\r\n        alignSelf: 'center'\r\n\r\n\r\n    },\r\n    withinMain: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        margin: 5,\r\n\r\n    },\r\n    imageBoundary: {\r\n        height: 90,\r\n        width: 80,\r\n        borderRadius: 10,\r\n        marginRight: 8\r\n    },\r\n    textBoundary: {\r\n        height: 90,\r\n        paddingRight: 20\r\n\r\n    },\r\n    topText: {\r\n        fontWeight: 'bold',\r\n        fontSize: 18\r\n    },\r\n    midText: {\r\n        color: 'grey',\r\n        fontSize: 12\r\n    },\r\n    downText: {\r\n        color: COLORS.green,\r\n        fontWeight: 'bold',\r\n        fontSize: 16,\r\n        marginTop: 10\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}